{"ast":null,"code":"var _jsxFileName = \"/Users/tdnguyen21/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport validate from './validate';\nimport PhoneNumber from './PhoneNumber';\nimport AccessCode from './AccessCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      const updatedControls = { ...this.state.formControls\n      };\n      const updatedFormElement = { ...updatedControls[name]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      let formIsValid = true; // console.log(updatedControls);\n\n      for (let inputIdentifier in updatedControls) {\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      } // formIsValid = updatedControls[\"phone\"].valid && formIsValid;\n\n\n      this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    this.formSubmitHandler = () => {\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n\n      console.dir(formData);\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      alert('A form was submitted: ' + this.state.formControls.phone.value + this.state.formControls.code.value);\n\n      if (this.state.formControls.code.value) {\n        let data = {\n          phone: this.state.formControls.phone.value,\n          code: this.state.formControls.code.value\n        };\n        fetch('http://localhost:9000/users/ValidateAccessCode', data).then(function (response) {\n          console.log(response);\n          return response.json();\n        });\n      } else {\n        let data = {\n          phone: this.state.formControls.phone.value\n        };\n        fetch('http://localhost:9000/users/CreateNewAccessCode', data).then(function (response) {\n          console.log(response);\n          return response.json();\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.state = {\n      formIsValid: false,\n      formControls: {\n        phone: {\n          value: '',\n          placeholder: 'Phone number',\n          valid: \"false\",\n          validationRules: {\n            maxLength: 10,\n            isRequired: true\n          },\n          touched: \"false\"\n        },\n        code: {\n          value: '',\n          placeholder: 'Access Code',\n          valid: \"false\",\n          validationRules: {\n            isRequired: false,\n            maxLength: 6\n          },\n          touched: \"false\"\n        }\n      }\n    };\n  }\n\n  // code to check express connection\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWereMount() {\n    this.callAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Skipli Coding Challenge - Tung \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"App-intro\",\n          children: [\";\", this.state.apiResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter the Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PhoneNumber, {\n            name: \"phone\",\n            placeholder: this.state.formControls.phone.placeholder,\n            value: this.state.formControls.phone.value,\n            onChange: this.changeHandler // touched={this.state.formControls.phone.touched}\n            // valid={this.state.formControls.phone.valid}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter the Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccessCode, {\n            name: \"code\",\n            placeholder: this.state.formControls.code.placeholder,\n            value: this.state.formControls.code.value,\n            onChange: this.changeHandler // touched={this.state.formControls.code.touched}\n            // valid={this.state.formControls.code.valid}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.formSubmitHandler,\n            disabled: !this.state.formIsValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tdnguyen21/my-app/src/App.js"],"names":["React","Component","axios","validate","PhoneNumber","AccessCode","App","constructor","changeHandler","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","inputIdentifier","setState","formSubmitHandler","formData","formElementId","console","dir","onChange","e","handleSubmit","alert","phone","code","data","fetch","then","response","log","json","preventDefault","placeholder","maxLength","isRequired","callAPI","res","text","apiResponse","componentWereMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './index.css';\n\nimport validate from './validate';\nimport PhoneNumber from './PhoneNumber';\nimport AccessCode from './AccessCode';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      formIsValid: false,\n      formControls: {\n        \n        phone: {\n          value: '',\n          placeholder: 'Phone number',\n          valid: \"false\",\n          validationRules: {\n            maxLength: 10,\n            isRequired: true\n          },\n          touched: \"false\"\n        },\n        code: {\n          value: '',\n          placeholder: 'Access Code',\n          valid: \"false\",\n          validationRules: {\n            isRequired: false,\n            maxLength: 6,\n          },\n          touched: \"false\"\n        },\n\n      },\n    }\n  }\n\n\n  changeHandler = event => {\n    \n      const name = event.target.name;\n      const value = event.target.value;\n\n      const updatedControls = {\n        ...this.state.formControls\n      };\n      const updatedFormElement = {\n        ...updatedControls[name]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n\n      updatedControls[name] = updatedFormElement;\n\n      let formIsValid = true;\n      // console.log(updatedControls);\n      for (let inputIdentifier in  updatedControls){\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      }\n      // formIsValid = updatedControls[\"phone\"].valid && formIsValid;\n      this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n\n  }\n  \n  \n  formSubmitHandler = () => {\n    const formData = {};\n    for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n        console.dir(formData);\n    }\n  \n  // code to check express connection\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res }));\n  }\n\n  componentWereMount() {\n    this.callAPI();\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  \n\n  handleSubmit = (event) => {\n    alert('A form was submitted: ' + this.state.formControls.phone.value + this.state.formControls.code.value);\n    if (this.state.formControls.code.value){\n      let data = {\n        phone: this.state.formControls.phone.value,\n        code: this.state.formControls.code.value,\n      }\n      fetch('http://localhost:9000/users/ValidateAccessCode', data).then(function(response) {\n          console.log(response)\n          return response.json();\n        });\n      }\n      else{\n        let data = {\n          phone: this.state.formControls.phone.value,\n        }\n        fetch('http://localhost:9000/users/CreateNewAccessCode', data).then(function(response) {\n            console.log(response)\n            return response.json();\n          });\n      }\n    event.preventDefault();\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n          <header>\n            <h1> Skipli Coding Challenge - Tung </h1>\n            <p className=\"App-intro\">;{this.state.apiResponse}</p>\n          </header>\n\n      <div className = \"content\"> \n        <form onSubmit={this.handleSubmit}>\n            <label>Enter the Name</label>\n            <PhoneNumber name=\"phone\" \n                      placeholder={this.state.formControls.phone.placeholder}\n                      value={this.state.formControls.phone.value}\n                      onChange={this.changeHandler}\n                      // touched={this.state.formControls.phone.touched}\n                      // valid={this.state.formControls.phone.valid}\n            />\n            \n            <br/>\n            <label>Enter the Code</label>\n            <AccessCode name=\"code\"\n                    placeholder={this.state.formControls.code.placeholder}\n                    value={this.state.formControls.code.value}\n                    onChange={this.changeHandler}\n                    // touched={this.state.formControls.code.touched}\n                    // valid={this.state.formControls.code.valid}\n            />\n            <br/>\n            <button onClick={this.formSubmitHandler} \n                    disabled={!this.state.formIsValid}\n              > \n                Submit\n            </button>\n            <br/>\n            </form>\n\n      </div>\n    </div>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}